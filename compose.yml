---
version: "3.9"
networks:
  default:
    driver: bridge
  traf:
    name: traf
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.1.0/24
# Common Environmental Variables
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  networks:
    - traf
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  networks:
    - traf
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

# Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  networks:
    - traf
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    env_file:
      - .env 
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /docker/appdata/traefik/rules:/rules # file provider directory
      - /docker/appdata/traefik/config:/config # file provider directory
      - /var/run/docker.sock:/var/run/docker.sock:ro # If you use Docker Socket Proxy, comment this line out
      - /docker/appdata/traefik/acme/acme.json:/acme.json # cert location - you must create this empty file and change permissions to 600
      - /docker/logs:/logs # for fail2ban or crowdsec
      - /docker/share:/shared
      - /docker/appdata/traefik/config/traefik.yml:/traefik.yml:ro
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      ### Setup Console Access
      - "traefik.http.routers.traefik.rule=Host(\"atc.$DOMAIN\")"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.routers.traefik.service=traefik-svc"
      - "traefik.http.middlewares.traefik-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.traefik-auth.basicauth.realm=Hello!"
      - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"
      ### DNS CHALLENGE
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.tls.certresolver=lets-encr"
      - "traefik.http.routers.traefik.tls.domains[0].main=*.$DOMAIN"
      - "traefik.http.routers.traefik.tls.domains[0].sans=$DOMAIN"
      ### HTTP REDIRECT
#      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
#      - "traefik.http.routers.redirect-https.rule=hostregexp(`{host:.+}`)"
#      - "traefik.http.routers.redirect-https.entrypoints=web"
#      - "traefik.http.routers.redirect-https.middlewares=redirect-to-https"
    networks:
      - default
      - traf

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.rule=Host(`whoami.$DOMAIN`)"
      - "traefik.http.routers.whoami.tls.certresolver=lets-encr"
      - "traefil.http.routers.whoami.tls.domains[0].main=whoami.$DOMAIN"
      - "traefik.http.routers.whoami.middlewares=whoami-auth"
      - "traefik.http.middlewares.whoami-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.whoami-auth.basicauth.realm=Hello!"

  portainer:
    <<: *common-keys-media 
    container_name: portainer
    image:  portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.port.rule=Host(\"port.$DOMAIN\")"
      - "traefik.http.routers.port.middlewares=port-auth"
      - "traefik.http.middlewares.port-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.port-auth.basicauth.realm=Hello!"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy and comment this line out, for improved security.
      - $DOCKERDIR/appdata/portainer/data:/data # Change to local directory if you want to save/transfer config locally.
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5300:9000"
    environment:
      <<: *default-tz-puid-pgid

  homarr:
    <<: *common-keys-media
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.tls.certresolver=lets-encr"
      - "traefil.http.routers.whoami.tls.domains[0].main=whoami.$DOMAIN"

      - "traefik.http.routers.homarr.rule=Host(\"homarr.$DOMAIN\")"
      - "traefik.http.routers.homarr.middlewares=homarr-auth"
      - "traefik.http.middlewares.homarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.homarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/homarr/configs:/app/data/configs
      - $DOCKERDIR/appdata/homarr/data:/data
      - $DOCKERDIR/appdata/homarr/icons:/app/public/icons
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5301:7575"
    environment:
      <<: *default-tz-puid-pgid

  radarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.radarr.tls.certresolver=lets-encr"
#      - "traefil.http.routers.radarr.tls.domains[0].main=radarr.$DOMAIN"

      - "traefik.http.routers.radarr.rule=Host(\"radarr.$DOMAIN\")"
      - "traefik.http.routers.radarr.middlewares=radarr-auth"
      - "traefik.http.middlewares.radarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.radarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/radarr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5302:7878"
    environment:
      <<: *default-tz-puid-pgid

  sonarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    labels:
      - "traefik.enable=true"
 #     - "traefik.http.routers.sonarr.tls.certresolver=lets-encr"
 #     - "traefil.http.routers.sonarr.tls.domains[0].main=sonarr.$DOMAIN"
      - "traefik.http.routers.sonarr.rule=Host(\"sonarr.$DOMAIN\")"
      - "traefik.http.routers.sonarr.middlewares=sonarr-auth"
      - "traefik.http.middlewares.sonarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.sonarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/sonarr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5303:8989"
    environment:
      <<: *default-tz-puid-pgid

  lidarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    labels:
      - "traefik.enable=true"
  #    - "traefik.http.routers.lidarr.tls.certresolver=lets-encr"
  #    - "traefil.http.routers.lidarr.tls.domains[0].main=lidarr.$DOMAIN"
      - "traefik.http.routers.lidarr.rule=Host(\"lidarr.$DOMAIN\")"
      - "traefik.http.routers.lidarr.middlewares=lidarr-auth"
      - "traefik.http.middlewares.lidarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.lidarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/lidarr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5304:8686"
    environment:
      <<: *default-tz-puid-pgid
  prowlarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    labels:
      - "traefik.enable=true"
   #   - "traefik.http.routers.prowlarr.tls.certresolver=lets-encr"
   #   - "traefil.http.routers.prowlarr.tls.domains[0].main=prowlarr.$DOMAIN"
      - "traefik.http.routers.prowlarr.rule=Host(\"prowlarr.$DOMAIN\")"
      - "traefik.http.routers.prowlarr.middlewares=prowlarr-auth"
      - "traefik.http.middlewares.prowlarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.prowlarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/prowlarr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5305:9696"
    environment:
      <<: *default-tz-puid-pgid
  whisparr:
    <<: *common-keys-media
    image: ghcr.io/hotio/whisparr
    container_name: whisparr
    labels:
      - "traefik.enable=true"
    #  - "traefik.http.routers.whisparr.tls.certresolver=lets-encr"
     # - "traefil.http.routers.whisparr.tls.domains[0].main=whisparr.$DOMAIN"
      - "traefik.http.routers.whisparr.rule=Host(\"whisparr.$DOMAIN\")"
      - "traefik.http.routers.whisparr.middlewares=whisparr-auth"
      - "traefik.http.middlewares.whisparr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.whisparr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/whisparr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5306:6969"
    environment:
      <<: *default-tz-puid-pgid

  readarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.readarr.tls.certresolver=lets-encr"
#      - "traefil.http.routers.readarr.tls.domains[0].main=readarr.$DOMAIN"
      - "traefik.http.routers.readarr.rule=Host(\"readarr.$DOMAIN\")"
      - "traefik.http.routers.readarr.middlewares=readarr-auth"
      - "traefik.http.middlewares.readarr-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.readarr-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/readarr:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - $DATADIR/books:/data/books
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5307:8787"
    environment:
      <<: *default-tz-puid-pgid

  deluge:
    <<: *common-keys-media
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.readarr.tls.certresolver=lets-encr"
#      - "traefil.http.routers.readarr.tls.domains[0].main=readarr.$DOMAIN"
      - "traefik.http.routers.deluge.rule=Host(\"deluge.$DOMAIN\")"
      - "traefik.http.routers.deluge.middlewares=deluge-auth"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"
      - "traefik.http.middlewares.deluge-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.deluge-auth.basicauth.realm=Hello!"
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - $DOCKERDIR/appdata/deluge/config:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - $DOCKERDIR/scripts:/scripts
      - $DOCKERDIR/logs:/logs
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:develop
    container_name: overseerr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.tls.certresolver=lets-encr"
      - "traefil.http.routers.overseerr.tls.domains[0].main=overseerr.$DOMAIN"
      - "traefik.http.routers.overseer.rule=Host(\"overseer.$DOMAIN\")"
      - "traefik.http.routers.overseer.middlewares=overseer-auth"
      - "traefik.http.middlewares.overseer-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.overseer-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/overseerr:/config
    ports:
      - "5308:5055"

  transmission:
    <<: *common-keys-media
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    labels:
      - "traefik.enable=true"
  #    - "traefik.http.routers.trans.tls.certresolver=lets-encr"
  #    - "traefil.http.routers.trans.tls.domains[0].main=trans.$DOMAIN"
      - "traefik.http.routers.trans.rule=Host(\"trans.$DOMAIN\")"
      - "traefik.http.routers.trans.middlewares=trans-auth"
      - "traefik.http.middlewares.trans-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.trans-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/transmission:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5309:9091"
    environment:
      - USER=YOURUSERNAME
      - PASS=YOURPASSWORD
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC

  ombi:
    <<: *common-keys-media
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    labels:
      - "traefik.http.routers.ombi.rule=Host(\"ombi.$DOMAIN\")"
      - "traefik.http.routers.ombi.middlewares=ombi-auth"
      - "traefik.http.middlewares.ombi-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.ombi-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/ombi:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5310:3579"
    environment:
      <<: *default-tz-puid-pgid

  filebrowser:
    <<: *common-keys-media
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    labels:
      - "traefik.enable=true"
 #     - "traefik.http.routers.files.tls.certresolver=lets-encr"
 #     - "traefil.http.routers.files.tls.domains[0].main=files.$DOMAIN"
      - "traefik.http.routers.filebrowser.rule=Host(\"files.$DOMAIN\")"
      - "traefik.http.routers.filebrowser.middlewares=filebrowser-auth"
      - "traefik.http.middlewares.filebrowser-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.filebrowser-auth.basicauth.realm=Hello!"
    volumes:
      - $DOCKERDIR/appdata/filebrowser:/config
      - $DATA2DIR:/srv
      - $DATADIR:/srv/tank
      - $DOCKERDIR:/srv/docker
      - $DOCKERDIR/appdata/filebrowser/data:/database
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5320:80"
    environment:
      <<: *default-tz-puid-pgid


  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 30 12 * * *" # Everyday at 12:30
      DOCKER_API_VERSION: "1.40"
    
  dockergc:
    <<: *common-keys-apps
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy and comment this line for improved security.
    environment:
      CRON: 0 0 0 * * ? # Everyday at midnight. Previously 0 0 * * *
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ

  calibre:
    <<: *common-keys-media
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    labels:
      - "traefik.enable=true"
  #    - "traefik.http.routers.calibre.tls.certresolver=lets-encr"
  #    - "traefil.http.routers.calibre.tls.domains[0].main=calibre.$DOMAIN"
      - "traefik.http.routers.calibre.rule=Host(\"calibre.$DOMAIN\")"
      - "traefik.http.routers.calibre.middlewares=calibre-auth"
      - "traefik.http.middlewares.calibre-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.calibre-auth.basicauth.realm=Hello!"
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - USER=YOURUSERID
      - PASS=YOURPASSWORD
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - $DOCKERDIR/appdata/calibre:/config
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - $DATA2DIR:/srv
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 5311:8080
      - 5312:8181
      - 5313:8081
    restart: unless-stopped

  lazylibrarian:
    <<: *common-keys-media
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - $DOCKERDIR/appdata/lazylibrarian:/config
      - $DOCKERDIR/logs/lazylibrarian:/logs
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      - $DATA2DIR/share:/tank
      - $DATADIR/books:/data/books
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 5316:5299
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lazylibrarian.rule=Host(\"librarian.$DOMAIN\")"
      - "traefik.http.routers.lazylibrarian.middlewares=lazylibrarian-auth"
      - "traefik.http.middlewares.lazylibrarian-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.lazylibrarian-auth.basicauth.realm=Hello!"

  netbootxyz:
    <<: *common-keys-media
    image: ghcr.io/netbootxyz/netbootxyz
    container_name: netbootxyz
    environment:
#      - MENU_VERSION=2.0.47 # optional
      <<: *default-tz-puid-pgid
    volumes:
      - $DOCKERDIR/appdata/netboot/config:/config # optional
      - $DOCKERDIR/appdata/netboot/assets:/assets # optional
    ports:
      - 3000:3000
      - 69:69/udp
      - 8181:80 #optional
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netboot.rule=Host(\"netboot.$DOMAIN\")"
      - "traefik.http.routers.netboot.middlewares=netboot-auth"
      - "traefik.http.middlewares.netboot-auth.basicauth.usersFile=/config/users"
      - "traefik.http.middlewares.netboot-auth.basicauth.realm=Hello!"
